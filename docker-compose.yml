services:
  # Service backend (serveur Node.js)
  backend:
    build: .
    container_name: job-search-backend
    restart: unless-stopped
    env_file:
      - ./.env.production
      - ./server/.env
    expose:
      - "4059"  # Exposé au réseau interne uniquement
    volumes:
      - ./build:/app/build  # Partage le dossier build
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4059/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.jobs.creachtheo.fr`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=4059"
    networks:
      - default
      - traefik_default  # Le nom du réseau par défaut de votre stack Traefik
  
  # Service frontend (serveur Nginx)
  frontend:
    image: nginx:alpine
    container_name: job-search-frontend
    restart: unless-stopped
    expose:
      - "4060"  # Exposé au réseau interne uniquement
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./build:/app/build  # Montage des fichiers statiques
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`jobs.creachtheo.fr`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=4060"
    networks:
      - default
      - traefik_default

# Définition des réseaux
networks:
  default:
  traefik_default:
    external: true  # Ce réseau est créé à l'extérieur de ce docker-compose
